dns = require('dns')

module.exports = (robot) ->

  robot.hear /(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/, (msg) ->
    ip = msg.match[0]
    try
      dns.reverse ip, (err, domains) ->
        if err?
          msg.reply ":nya-n: < #{ip} はわかんなかったにゃん"
        else
          domains.forEach (domain) -> msg.reply ":nya-n: < #{ip} は #{domain} ですにゃん"
    catch
      msg.reply ":nya-n: < #{ip} はわかんなかったにゃん"

  robot.hear /(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)+([a-z]+)/gi, (msg) ->
    domain = msg.match[0]
    nodes = domain.split(".")
    if tlds.indexOf(nodes[nodes.length-1]) >= 0 && ignores.indexOf(domain) < 0
      try
        dns.resolve domain, (err, addresses) ->
          if err?
            msg.reply ":nya-n: < #{domain} はわかんなかったにゃん"
          else
            msg.reply ":nya-n: < #{domain} は #{addresses.join('  *,*  ')} ですにゃん"
      catch
        msg.reply ":nya-n: < #{domain} はわかんなかったにゃん"

  ignores = [
    "daraz-tek.slack.com"
  ]

  tlds = [
    "com"
    "net"
    "org"
    "edu"
    "gov"
    "mil"
    "int"
    "info"
    "biz"
    "name"
    "pro"
    "museum"
    "aero"
    "coop"
    "ac"
    "ad"
    "ae"
    "af"
    "ag"
    "ai"
    "al"
    "am"
    "an"
    "ao"
    "aq"
    "ar"
    "as"
    "at"
    "au"
    "aw"
    "ax"
    "az"
    "ba"
    "bb"
    "bd"
    "be"
    "bf"
    "bg"
    "bh"
    "bi"
    "bj"
    "bm"
    "bn"
    "bo"
    "bq"
    "br"
    "bs"
    "bt"
    "bv"
    "bw"
    "by"
    "bz"
    "ca"
    "cc"
    "cd"
    "cf"
    "cg"
    "ch"
    "ci"
    "ck"
    "cl"
    "cm"
    "cn"
    "co"
    "cr"
    "cu"
    "cv"
    "cw"
    "cx"
    "cy"
    "cz"
    "de"
    "dj"
    "dk"
    "dm"
    "do"
    "dz"
    "ec"
    "ee"
    "eg"
    "eh"
    "er"
    "es"
    "et"
    "eu"
    "fi"
    "fj"
    "fk"
    "fm"
    "fo"
    "fr"
    "ga"
    "gb"
    "gd"
    "ge"
    "gf"
    "gg"
    "gh"
    "gi"
    "gl"
    "gm"
    "gn"
    "gp"
    "gq"
    "gr"
    "gs"
    "gt"
    "gu"
    "gw"
    "gy"
    "hk"
    "hm"
    "hn"
    "hr"
    "ht"
    "hu"
    "id"
    "ie"
    "il"
    "im"
    "in"
    "io"
    "iq"
    "ir"
    "is"
    "it"
    "je"
    "jm"
    "jo"
    "jp"
    "ke"
    "kg"
    "kh"
    "ki"
    "km"
    "kn"
    "kp"
    "kr"
    "kr"
    "kw"
    "ky"
    "kz"
    "la"
    "lb"
    "lc"
    "li"
    "lk"
    "lr"
    "ls"
    "lt"
    "lu"
    "lv"
    "ly"
    "ma"
    "mc"
    "md"
    "me"
    "mg"
    "mh"
    "mk"
    "ml"
    "mm"
    "mn"
    "mo"
    "mp"
    "mq"
    "mr"
    "ms"
    "mt"
    "mu"
    "mv"
    "mw"
    "mx"
    "my"
    "mz"
    "na"
    "nc"
    "ne"
    "nf"
    "ng"
    "ni"
    "nl"
    "no"
    "np"
    "nr"
    "nu"
    "nz"
    "om"
    "pa"
    "pe"
    "pf"
    "pg"
    "ph"
    "pk"
    "pl"
    "pm"
    "pn"
    "pr"
    "ps"
    "pt"
    "pw"
    "py"
    "qa"
    "re"
    "ro"
    "rs"
    "ru"
    "rw"
    "sa"
    "sb"
    "sc"
    "sd"
    "se"
    "sg"
    "sh"
    "si"
    "sj"
    "sk"
    "sl"
    "sm"
    "sn"
    "so"
    "sr"
    "ss"
    "st"
    "su"
    "sv"
    "sx"
    "sy"
    "sz"
    "tc"
    "td"
    "tf"
    "tg"
    "th"
    "tj"
    "tk"
    "tl"
    "tm"
    "tn"
    "to"
    "tp"
    "tr"
    "tt"
    "tv"
    "tw"
    "tz"
    "ua"
    "ug"
    "uk"
    "us"
    "uy"
    "uz"
    "va"
    "vc"
    "ve"
    "vg"
    "vi"
    "vn"
    "vu"
    "wf"
    "ws"
    "ye"
    "yt"
    "za"
    "zm"
    "zw"
  ]

